name: 'Restore Nix store'
description: 'Restore Nix store using GitHub Actions cache to speed up workflows.'
author: 'GitHub'
inputs:
  primary-key:
    description: |
      - When non-empty string, the action uses this key for restoring a cache.
      - Otherwise, the action fails.
    required: true

  restore-first-match-keys:
    description: |
      - When a newline-separated non-empty list of non-empty key prefixes, if no cache hit occurred for the `primary-key`, the action searches for the first prefix for which there exists a cache with a matching key and tries to restore that cache.
      - Otherwise, this input has no effect.
    default: ''
  restore-all-matches-keys:
    description: |
      - When a newline-separated non-empty list of non-empty key prefixes, the action tries to restore all caches whose keys match these prefixes.
      - Otherwise, this input has no effect.
    default: ''

  skip-restore-on-primary-key-hit:
    description: |
      - Can have an effect only when `first-match-keys` has no effect.
      - When `true`, if there is a hit on the `primary-key`, the action doesn't restore caches.
      - Otherwise, this input has no effect.
    default: 'false'

  fail-on:
    description: |
      - Input form: `<key type>.<result>`.
      - `<key type>` options: `primary`, `first-match`.
      - `<result>` options: `miss`, `not-restored`.
      - When the input satisfies the input form, the action fails when the event described in the input happens.
      - Example:
        - Input: `primary.not-restored`.
        - Event: a cache could not be restored via the `primary-key`.

  paths:
    description: |
      - When a newline-separated non-empty list of non-empty path regex expressions, the action appends them to [`/nix`, `~/.cache/nix`, `~root/.cache/nix`] and uses the resulting list for restoring caches.
      - Otherwise, the action uses [`/nix`, `~/.cache/nix`, `~root/.cache/nix`] for restoring caches.
    default: ''
  paths-macos:
    description: |
      - Overrides `paths`.
      - Can have an effect only on a `macOS` runner.
      - When a newline-separated non-empty list of non-empty path regex expressions, the action appends them to [`/nix`, `~/.cache/nix`, `~root/.cache/nix`] and uses the resulting list for restoring caches.
      - Otherwise, the action uses [`/nix`, `~/.cache/nix`, `~root/.cache/nix`] for restoring caches.
    default: ''
  paths-linux:
    description: |
      - Overrides `paths`.
      - Can have an effect only on a `Linux` runner.
      - When a newline-separated non-empty list of non-empty path regex expressions, the action appends them to [`/nix`, `~/.cache/nix`, `~root/.cache/nix`] and uses the resulting list for restoring caches.
      - Otherwise, the action uses [`/nix`, `~/.cache/nix`, `~root/.cache/nix`] for restoring caches.
    default: ''
  
outputs:
  primary-key:
    description: |
      - A string.
      - The `primary-key`.
  
  hit:
    description: |
      - A boolean value.
      - `true` when `hit-key` is `true` or `first-match` is `true`.
      - `false` otherwise.
  hit-key:
    description: |
      - A boolean value.
      - `true` when a cache was found via the `primary-key`.
      - `false` otherwise.
  hit-first-match:
    description: |
      - A boolean value.
      - `true` when a cache was found via the `restore-first-match-keys`.
      - `false` otherwise.
  
  restored-key:
    description: |
      - A string.
      - The key of a cache restored via the `primary-key` or via the `restore-first-match-keys`.
      - An empty string otherwise.
  
  restored-keys:
    description: |
      - A possibly empty array of strings (JSON).
      - Keys of restored caches.
      - Example: `["key1", "key2"]`.

runs:
  using: 'node16'
  main: '../dist/restore-only/index.js'
branding:
  icon: 'archive'
  color: 'gray-dark'
